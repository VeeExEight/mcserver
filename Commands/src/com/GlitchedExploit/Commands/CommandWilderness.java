package com.GlitchedExploit.Commands;

import java.util.Arrays;
import java.util.List;
import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

public class CommandWilderness implements CommandExecutor {

	/*
	 * 
	 * TODO:
	 * Make aliases /wild, /random, /randomtp, /rtp, /wildtp
	 * Open GUI with 5 different types of doors, signalling 5 different distances
	 *
	 */

	
	public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
		
		if (!(sender instanceof Player)) {
			sender.sendMessage("Only players can use this command");
			return false;
		}
		
		Player p = (Player) sender;
		
		p.openInventory(wildInventory());
		
		//Location l = randomLoc(p.getPlayer(), 5000);
		
		//	p.sendMessage(l.getX() + " " + l.getY() + " " + l.getZ() + " " +  l.getWorld().getName());
		
		return false;
	}
	
	public ItemStack make(Material item, int amount, String name, List<String> lore) {
		
		ItemStack i = new ItemStack(item);
		ItemMeta m = i.getItemMeta();
		m.setDisplayName(name);
		m.setLore(lore);
		i.setItemMeta(m);
		return i;
	}

	public Inventory wildInventory() {
		
		Inventory inv = Bukkit.createInventory(null, 9, ChatColor.translateAlternateColorCodes('&', 
				"&8[&cStrategicSurvival&8] &7Wilderness Teleport"));
		
		ItemStack tiny = make(Material.SPRUCE_DOOR_ITEM, 1, ChatColor.GREEN + "Tiny", 
				Arrays.asList(ChatColor.GRAY + "Teleport 3000 blocks away."));
		
		ItemStack shortDistance = make(Material.BIRCH_DOOR_ITEM, 1, ChatColor.GREEN + "Short", 
				Arrays.asList(ChatColor.GRAY + "Teleport 5000 blocks away."));
		
		ItemStack normal = make(Material.JUNGLE_DOOR_ITEM, 1, ChatColor.GREEN + "Normal", 
				Arrays.asList(ChatColor.GRAY + "Teleport 10000 blocks away."));
		
		ItemStack distant = make(Material.ACACIA_DOOR_ITEM, 1, ChatColor.GREEN + "Distant", 
				Arrays.asList(ChatColor.GRAY + "Teleport 25000 blocks away."));
		
		ItemStack far = make(Material.DARK_OAK_DOOR_ITEM, 1, ChatColor.GREEN + "Far", 
				Arrays.asList(ChatColor.GRAY + "Teleport 50000 blocks away."));
		
		inv.setItem(2, tiny);
		inv.setItem(3, shortDistance);
		inv.setItem(4, normal);
		inv.setItem(5, distant);
		inv.setItem(6, far);
		
		return inv;
	}
	
	private boolean isSafeLocation(Location location) {
        Block feet = location.getBlock();
        if (!feet.getType().isTransparent() && !feet.getLocation().add(0, 1, 0).getBlock().getType().isTransparent()) {
            return false; // not transparent (will suffocate)
        }
        Block head = feet.getRelative(BlockFace.UP);
        if (!head.getType().isTransparent()) {
            return false; // not transparent (will suffocate)
        }
        Block ground = feet.getRelative(BlockFace.DOWN);
        if (!ground.getType().isSolid()) {
            return false; // not solid
        }
        return true;
    }
	
	public Location randomLoc(Player p, int distance) {
		
		Random random = new Random();
		
		World world = p.getLocation().getWorld();
		
		int x = 1 + random.nextInt(distance);
		int z = 1 + random.nextInt(distance);
		
		if (random.nextBoolean()) {
			x = (int) (x + p.getLocation().getX());
		} else {
			x = (int) (x - p.getLocation().getX());
		}
		if (random.nextBoolean()) {
			z = (int) (z + p.getLocation().getZ());
		} else {
			z = (int) (z - p.getLocation().getZ());
		}
		
		int y = world.getHighestBlockYAt(x, z);
		
		Location loc = new Location(world, x, y, z);
		
		if (!isSafeLocation(loc)) return randomLoc(p, distance);
		
		return loc;
	}

}
